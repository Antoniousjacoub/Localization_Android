<resources>
    <string name="app_name" translatable="false">Localization Sample</string>
    <string name="settings">Settings</string>
    <string name="welcomeTxt">Welcome to localization sample </string>
    <string name="change_language">Change language</string>
    <string name="home">Home</string>
    <string name="more">More</string>
    <string name="changeLanguage">Change language</string>

    <string name="search">Search</string>
    <string name="appLanguage">App Language</string>
    <string name="arabic" translatable="false">العربية</string>
    <string name="english" translatable="false">English</string>
    <string name="navSample" translatable="false">Nav sample</string>
    <string name="activiesSample" translatable="false">Activities Sample</string>
    <string name="fragmentsSample" translatable="false">Fragments sample</string>
    <string name="news">News</string>
    <string name="newsDetails">News details</string>
    <string name="singleActivity" translatable="false">Single Activity</string>
    <string name="menuSample" translatable="false">Menu sample</string>
    <string name="introductionToActivities">Introduction to Activities</string>
    <string name="introductionToActivitiesContent">"The mobile-app experience differs from its desktop counterpart in that a user's interaction with the app doesn't always begin in the same place. Instead, the user journey often begins non-deterministically. For instance, if you open an email app from your home screen, you might see a list of emails. By contrast, if you are using a social media app that then launches your email app, you might go directly to the email app's screen for composing an email. "</string>
    <string name="understandTheActivityLifecycle">Understand the Activity Lifecycle</string>
    <string name="understandTheActivityLifecycleContent">"As a user navigates through, out of, and back to your app, the Activity instances in your app transition through different states in their lifecycle. The Activity class provides a number of callbacks that allow the activity to know that a state has changed: that the system is creating, stopping, or resuming an activity, or destroying the process in which the activity resides. "</string>
    <string name="handleActivityStateChanges">Handle Activity State Changes</string>
    <string name="handleActivityStateChangesContent">"Different events, some user-triggered and some system-triggered, can cause an Activity to transition from one state to another. This document describes some common cases in which such transitions happen, and how to handle those transitions. "</string>
    <string name="testYourAppActivities">Test your app\'s activities</string>
    <string name="testYourAppActivitiesContent">Activities serve as containers for every user interaction within your app, so it\'s important to test how your app\'s activities behave during device-level events</string>
    <string name="understandTasksAndBackStack">Understand Tasks and Back Stack</string>
    <string name="understandTasksAndBackStackContent">A task is a collection of activities that users interact with when performing a certain job. The activities are arranged in a stack—the back stack)—in the order in which each activity is opened. For example, an email app might have one activity to show a list of new messages. When the user selects a message, a new activity opens to view that message. This new activity is added to the back stack. If the user presses the Back button, that new activity is finished and popped off the stack. The following video provides a good overview of how the back stack works.</string>
    <string name="localizationTxt">"Android runs on many devices in many regions. To reach the most users, your app should handle text, audio files, numbers, currency, and graphics in ways appropriate to the locales where your app is used. "</string>
    <string name="moreMenuTxt">العربية</string>
</resources>